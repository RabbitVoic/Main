
&НаКлиенте
Процедура Оформить(Команда)
	Отбор = Новый Структура("Пометка",Истина);
	
	ОтфильтрТаб = Объект.СписокЗаявок.НайтиСтроки(Отбор);
	
	Для Каждого ДокЗаявка ИЗ ОтфильтрТаб Цикл
		
		СтруктураДляПередачи = Новый Структура("Заявка,Контрагент,Договор,ДатаПередачи,ДатаВозврата",ДокЗаявка.Заявка,ДокЗаявка.Контрагент,ДокЗаявка.Договор,ДокЗаявка.ДатаПередачи,ДокЗаявка.ДатаВозврата);
		
		Проверка = ЗапросПроверки(СтруктураДляПередачи);
		
		Если Проверка = Истина Тогда
			ОформитьСервер(СтруктураДляПередачи);
		Иначе
			Сообщить("По данной заявке "+ДокЗаявка.Заявка+" акт создан!");
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры 

Функция ОформитьСервер(Данные)
	
	ТабЧастьТовары = ПолучитьТабличнуюЧасть(Данные.Заявка);
	
	ДокументАкт = Документы.otus_АктПередачиТовара.СоздатьДокумент();
	
	ЗаполнитьЗначенияСвойств(ДокументАкт,Данные);
	
	ДокументАкт.СписокТоваров.Загрузить(ТабЧастьТовары);
	
	ДокументАкт.Дата = ТекущаяДата();
	
	ДокументАкт.Статус = Перечисления.otus_СтатусАкта.Формируется;
	
	ДокументАкт.Записать(РежимЗаписиДокумента.Запись);
		
	
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТабличнуюЧасть(Документ)

    Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	otus_ЗаявкаТовары.Количество КАК Количество,
	|	otus_ЗаявкаТовары.Товар КАК Товар
	|ИЗ
	|	Документ.otus_Заявка.Товары КАК otus_ЗаявкаТовары
	|ГДЕ
	|	otus_ЗаявкаТовары.Ссылка = &Ссылка
	|";

	Запрос.УстановитьПараметр("Ссылка",Документ);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса;
	
КонецФункции	


&НаСервереБезКонтекста
Функция ЗапросПроверки(Данные)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	otus_АктПередачиТовара.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.otus_АктПередачиТовара КАК otus_АктПередачиТовара
	|ГДЕ
	|	otus_АктПередачиТовара.Заявка = &Заявка
	|	И otus_АктПередачиТовара.Контрагент = &Контрагент
	|	И otus_АктПередачиТовара.Договор = &Договор
	|";
	Запрос.УстановитьПараметр("Заявка",Данные.Заявка);
	Запрос.УстановитьПараметр("Контрагент",Данные.Контрагент);
	Запрос.УстановитьПараметр("Договор",Данные.Договор);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Если РезультатЗапроса.Количество() Тогда
		Возврат  Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;	
	
КонецФункции	


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	otus_Заявка.Ссылка КАК Заявка,
	|	otus_Заявка.Контрагент КАК Контрагент,
	|	otus_Заявка.Договор КАК Договор,
	|	otus_Заявка.ДатаПередачи КАК ДатаПередачи,
	|	otus_Заявка.ДатаВозврата КАК ДатаВозврата
	|ИЗ
	|	Документ.otus_Заявка КАК otus_Заявка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.otus_АктПередачиТовара КАК otus_АктПередачиТовара
	|		ПО (otus_АктПередачиТовара.Заявка = otus_Заявка.Ссылка)
	|ГДЕ
	|	otus_Заявка.Статус = &Статус
	|	И otus_АктПередачиТовара.Ссылка ЕСТЬ NULL
	|";
	Запрос.УстановитьПараметр("Статус",Перечисления.otus_СтатусЗаявок.Утверждена);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Объект.СписокЗаявок.Загрузить(РезультатЗапроса);
	
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьСервер();
КонецПроцедуры

&НаСервере
Процедура ОбновитьСервер()
    Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	otus_Заявка.Ссылка КАК Заявка,
	|	otus_Заявка.Контрагент КАК Контрагент,
	|	otus_Заявка.Договор КАК Договор,
	|	otus_Заявка.ДатаПередачи КАК ДатаПередачи,
	|	otus_Заявка.ДатаВозврата КАК ДатаВозврата
	|ИЗ
	|	Документ.otus_Заявка КАК otus_Заявка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.otus_АктПередачиТовара КАК otus_АктПередачиТовара
	|		ПО (otus_АктПередачиТовара.Заявка = otus_Заявка.Ссылка)
	|ГДЕ
	|	otus_Заявка.Статус = &Статус
	|	И otus_АктПередачиТовара.Ссылка ЕСТЬ NULL
	|";
	Запрос.УстановитьПараметр("Статус",Перечисления.otus_СтатусЗаявок.Утверждена);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
    Объект.СписокЗаявок.Загрузить(РезультатЗапроса);	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьДинСписок(Команда)
	Элементы.БлижайшийСрокВозврата.Обновить();
КонецПроцедуры

